#Millisecond 24
import os
from collections import Counter
from copy import deepcopy

path = os.path.dirname(os.path.realpath(__file__))
file = open(path + "/24input.txt", 'r')

connections = file.read().strip().split('\n')

#Millisecond 24: First + Second half
def create_bridges(links, next_link, strength, length):
    link_found = False
    for (link1, link2), occurence in links.items():
        if occurence == 0: continue

        if link1 == next_link:
            link_found = True
            new_links = deepcopy(links)
            new_links[link1, link2] -= 1
            new_links[link2, link1] -= 1
            yield from create_bridges(new_links, link2, strength + link1 + link2, length + 1)

    if not link_found: yield length, strength



links = Counter()
for conn in connections:
    link1, link2 = map(int, conn.split('/'))
    links[link1, link2] += 1
    links[link2, link1] += 1

gen = create_bridges(links, 0, 0, 0)

#not working -> infinity
#print(max(gen))
